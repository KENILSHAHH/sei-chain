package cmd

import (
	"fmt"
	"time"

	rootmulti2 "github.com/cosmos/cosmos-sdk/storev2/rootmulti"
	sdk "github.com/cosmos/cosmos-sdk/types"
	"github.com/cosmos/cosmos-sdk/x/auth/types"
	"github.com/ethereum/go-ethereum/common"
	"github.com/sei-protocol/sei-chain/tools/state_access/sc"
	"github.com/spf13/cobra"
)

func StateAccessCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "state-access [--action]",
		Short: "A tool access the state for SC store (memiavl).",
		Run:   execute,
	}
	cmd.PersistentFlags().String("home-dir", "/root/.sei", "Sei home directory")
	cmd.PersistentFlags().String("action", "has_account", "test account access")

	return cmd
}

func execute(cmd *cobra.Command, _ []string) {
	homeDir, _ := cmd.Flags().GetString("home-dir")
	action, _ := cmd.Flags().GetString("action")
	store := sc.NewStore(homeDir)
	switch action {
	case "has_account":
		HasAccount(store)
	}

}

func HasAccount(store *rootmulti2.Store) {
	key := sdk.NewKVStoreKey("acc")
	kvStore := store.GetKVStore(key)
	fmt.Printf("kvStore is %v\n", kvStore)
	accounts := []string{"0xBD1013CB81EA111bD003884e34AF09282BB07e0E",
		"0xd854ebCBCE43d568700076EFDBC670b7ebc5d18F",
		"0x24cdA9f65F7A1Eb17C8dB8d851d6c2069fFB3147",
		"0x0df6d5F9F649b09D9b3402a7C278c314B7c56196",
		"0xaEF624b3aA51Ca9694c2D66d89c1E021E48cbb1E",
		"0xe3b529ce9c8F12B4de1139d6b0F0919fADa842aC",
		"0x577b27BD3CE829cBa0Fd208E8A7f30a1e3eE270b",
		"0x37D678210D32600C1c2cF836eb87c0651455C895",
		"0xB35e174195f4D3cD1Ee50B8Eb2E4dbbC2a7CF1F9",
		"0x92E4c1dBd09422dFF171d7445c1CD365f4d65a63",
		"0x8647fEd28009f7f2ef3AbEF808e987cC491C7843",
		"0xd8B48f17fDd10cF83AC4ef906ada30592b434d25",
		"0x10e3986f178ceC680DA632ab26F1F2d2aa58a98A",
		"0xD07583B86A60Ff28aE798e61A5C6dBB95E71C35D",
		"0xedcFBF09c0d557383CC31400BdBE082C3036c670",
		"0xc69e58251C68b6528C1D6883cefd8F71C974615A",
		"0x83f835f4f6F5c0B4Bc321e3188D892E25474Af3A",
		"0x08cED5D021A66AAb70a6c2f013A749F070a7D490",
		"0xc50ff5Ca63509973ef858e31D782199474D7eab4",
		"0x107fc55Bb1D1d83b0FBd9BFA2c0513d31F861a75",
		"0xCcB527A6333aA4C00C20fCFA05c6f726520016a6",
		"0xD91b2924659B8f5784222CF816Af669a41d44074",
		"0x660992ED785aE1574eccf9cefc600CA4Beb7e787",
		"0xE3285efe85cF6cD34Af2c349085C0156a2e111a2",
		"0xdB8d87474ef5316F4EeA49FDEBFC676CFBcfE4e9",
		"0x6369E24fedBD8b87894F8244f960101190FaC96D",
		"0xc4864421fB20E8c7038FF84C2b395c19D618113c",
		"0x941A6c92b19ac959dBb56962b76e84d1eAcAb9d3",
		"0x96b8a493DADEA5B721E7946B9D044a1c22079273",
		"0x990870f94069f57297d85FD06955a75614695245",
		"0x167151c532902a61Ad1bfe2070a0a08e4E53A55E",
		"0xD99E8f65BE9f197dC226688c224130AC1b8464c7",
		"0x6fEF2d14afe57F9ee947BD4884d412277b3f91AB",
		"0xCDa5ED0857d0ec8680D09D956E1e863F71373d85",
		"0x7C686f3241d8b4Fff1E9E9F4F3E0EEAd6976D019",
		"0x903111161B2c55C087a7434d9cD5F8bFA1fc3959",
		"0x47BAB4324f35535b5DF99B5e1885E90822d80600",
		"0x4bDAd9ebf556736E3BB5B295444A9f70ef6c6E4C",
		"0x47F27A5a31Bc8846E6E1c98F112F4BC0A8D353c0",
		"0x91BD4F3A33AaA9B92045E77cF16039D24c7CF5F2",
		"0xFB3f3dd3c41b15b3A853B2b95479D7672D6C5b22",
		"0x3cE209Ad2818Fb9A3235a32254fFAF1b7DF1f882",
		"0x149295e984882F7889acE37195ad4Aa2D8255Da0",
		"0x05d7683A899c8E8E31Fb8C79c8556B38146aB716",
		"0xBC626Da4102C84AF036770A54A3A963a83f693c4",
		"0xf93BD2F53F09a1532a0957c0f5C1367Fe3d54062",
		"0x710fc619c725C87E1910d3ecCA5e2b3D64F063D5",
		"0x90104446283C1ABE1179EaE5585B798588D046ED",
		"0xf44a4CF238f9D7B07A984449b0fe078090540C3A",
		"0x273888ED8e501B8d07A3e8c4E818d339a0771869",
		"0xdc0bDCf96882ACE30a98616bAE6e9d79AA8a7cE9",
		"0xd45228A3e0038384371ea33fACfbe1236bE854b0",
		"0x153723680E01AEB28AeA228b99572372E0E0353c",
		"0x62d558341f1E26c24ac5c1c1DB590f87f8Ee8F95",
		"0x0d36203c50472408b86e812AFde00F0cbBfc69bE",
		"0x6A4652b5918fdf7D5249C71d295fc3Af5F7852aA",
		"0x856e5781936b6fdc52B7541B1d2686376DdDaD0f",
		"0x9539a4519974855eF155Bd0EC8Cbc652Bd357621",
		"0xd9407A5dcED213140553225808339a6548319a04",
		"0x065425258759BFC5E36B67A5D69b6E66e2Aa9FA0",
		"0x247eF1c1a02F36805DE4b853df3981df43fC6686",
		"0x7f8663c3D23716F118809e53D1497B39ceC83503",
		"0x19869bA9bFe3bcf72933C65cD0900cDc0B9BA32D",
		"0xDB3052bAaC2C03Ccf3B3B34d5cBA2103aAFcBf1a",
		"0xfA876c90CF9D1Dce5e926489F651F8b93898493a",
		"0x96B3e388d00Ad8594AFA97ff35834A49c18B68ad",
		"0x425D929f157D262917340BdDB672E1F4fd3158c0",
		"0xA5Ec8739e28971f4a27092e0328C521E67533F58",
		"0x087c3b4c1cF894A4C832DCD1D52f2e253c1c9bc0",
		"0xdA70Ce4B99009de719f7942cCc52d961B0F71f84",
		"0x661acCCFcA568C4b85AC78ecdbBA682Bd8DF9821",
		"0x5BeDB23c04Ca8e9B306362d9042560543f3937Fd",
		"0xC9aDc7a66B946fF36d6D26F3F80c90E3a04F39f4",
		"0x95Cfb060c9888F1Bb756A5e804132DAba22cbeaf",
		"0x030Fe561D5cf85F41aBafdEB9dCFe095FeC600a5",
		"0x93Abda23FE086D9A425534f5901A4E9D26D546f6",
		"0xBD7d8Ea9F8844F7fD2B8293957a621d580B7cf98",
		"0x92BBb3650173A36277eF3624128eA0e41018c0FE",
		"0xEC0262615fb331B5A6e516b81617aBC74D6236F2",
		"0x539c9B70f4c2A80fF8b60F91EFDb2679375eCF5A",
		"0x5980fEec583b6455099934Ca8c7bc16D432cC5D8",
		"0x97bfFC423c7C370cb2F2E3C88bebc1434cbEAd9c",
		"0x2A7b2e0de73473EB1156cDC292f82c94FaDF78E1",
		"0x9E876F1a65850923610b18F905a73D81556dc5a9",
		"0x40aB9B2e4652109B16BEF50cbAdC9f40f27B0Ec8",
		"0x3753D090d1539966A6fb634640D20C5cE9C5BEAF",
		"0x0b833994a58C1F6B779477E703F961672CAd35aC",
		"0xbdBAa00C45b6Aa9c74C65F56A3d7bFD13484dA2A",
		"0x461b2dfbFD3919e9b14a14DCB6BFa52aE0B94D5d",
		"0x6b5b614eB38D3F98644AD97e70E9Be5Be1d0D671",
		"0x275358E026ddec26Cc3066656324e27e5fF693e6",
		"0xebaf2879Aa5141a94470aa4f32a32B1Acb6E7ab9",
		"0x22500Ee93F4b1e455160ce35AcC79b7bcf9FEBe3",
		"0xDE07Ceb1aA99328A8eF207e7137285F51B5Cb3EE",
		"0x63d33Eb9F9fe933CE27aEcE2992669721AE5eabf",
		"0x661b199fa579915B63a6DC33bBDdcBa97d99ed55",
		"0xAB840A66ae13858035e80F498c797862072EB62F",
		"0x3887648e4C8Adc200C4ac8f61782F1f07B6C92eF",
		"0x7000e66bEd575581f507D7d05DA1485298DcEBd9",
		"0x8747859edb708C8914eB7A8515BB324e0fFCfA41"}
	startTime := time.Now()
	for _, account := range accounts {
		acc := common.HexToAddress(account).Bytes()
		kvStore.Has(types.AddressStoreKey(acc))
	}
	fmt.Printf("Run over total %d accounts took %s\n", len(accounts), time.Since(startTime))

}
